<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.georsoft.system.mapper.UsrFunctionTreeMapper">

	<resultMap type="UsrFunctionTree" id="UsrFunctionResult">
		<id     property="functionCode"         column="function_code"        />
		<result property="functionName"       column="function_name"      />
		<result property="parentCode"       column="parent_code"      />
		<result property="viewIndex"       column="view_index"      />
		<result property="isLeaf" column="is_leaf"/>
		<result property="functionPath" column="function_path"/>
		<result property="remark"         column="remark"         />
		<result property="isPanel" column="is_panel"/>
		<result property="iconResource"           column="icon_resource"           />
		<result property="functionType"       column="function_type"      />
		<result property="viewFlag"        column="view_flag"        />
		<result property="functionClass" column="function_class"/>
		<result property="fullPath" column="full_path"/>
		<result property="functionKind" column="function_kind"/>
		<result property="quickType" column="quick_type"/>
		<result property="query"          column="query"          />
		<result property="isFrame"        column="is_frame"       />
		<result property="isCache"        column="is_cache"       />
		<result property="path"           column="path"           />
		<result property="component"      column="component"      />
		<result property="perms"          column="perms"          />
	</resultMap>

	<sql id="selectFunctionVo">
        select function_code, function_name, parent_code, view_index, is_leaf, function_path, remark, is_panel,
			   icon_resource, function_type, function_class, full_path, function_kind, quick_type, `query`, is_frame,
			   is_cache, path, component, view_flag, ifnull(perms,'') as perms
		from usr_function_tree
    </sql>
    
    <select id="selectFunctionList" parameterType="UsrFunctionTree" resultMap="UsrFunctionResult">
		<include refid="selectFunctionVo"/>
		<where>
			<if test="functionName != null and functionName != ''">
				AND function_name like concat('%', #{functionName}, '%')
			</if>
			<if test="viewFlag != null and viewFlag != ''">
				AND view_flag = #{viewFlag}
			</if>
		</where>
		order by parent_code, view_index
	</select>
	
	<select id="selectFunctionTreeAll" resultMap="UsrFunctionResult">
		select distinct m.function_code, m.parent_code, m.function_name, m.path, m.component, m.`query`, m.view_flag, 
		                ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.function_type, m.icon_resource, 
		                m.view_index
		from usr_function_tree m where m.function_type in ('M', 'C')
		order by m.parent_code, m.view_index
	</select>
	
	<select id="selectFunctionListByUserId" parameterType="UsrFunctionTree" resultMap="UsrFunctionResult">
		select distinct m.function_code, m.parent_code, m.function_name, m.path, m.component, m.`query`, m.view_flag, 
		                ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.function_type, m.icon_resource, 
		                m.view_index, m.create_time
		from usr_function_tree m
		left join usr_role_function rm on m.function_code = rm.function_code
		left join usr_user_role ur on rm.role_code = ur.role_code
		left join usr_role ro on ur.role_code = ro.role_code
		where ur.user_id = #{params.userId}
		<if test="functionName != null and functionName != ''">
            AND m.function_name like concat('%', #{functionName}, '%')
		</if>
		<if test="viewFlag != null and viewFlag != ''">
            AND m.view_flag = #{viewFlag}
		</if>
		order by m.parent_code, m.view_index
	</select>
    
    <select id="selectFunctionTreeByLoginName" parameterType="Long" resultMap="UsrFunctionResult">
		select distinct m.function_code, m.parent_code, m.function_name, m.path, m.component, m.`query`, m.view_flag,
		                ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.function_type, m.icon_resource, m.view_index
		from usr_function_tree m
			 left join usr_role_function rm on m.function_code = rm.function_code
			 left join usr_user_role ur on rm.role_code = ur.role_code
			 left join usr_role ro on ur.role_code = ro.role_code
			 left join usr_users u on ur.login_name = u.login_name
		where u.login_name = #{loginName} and m.function_type in ('M', 'C')
		order by m.parent_code, m.view_index
	</select>
	
	<select id="selectFunctionListByRoleCode" resultType="Long">
		select m.function_code
		from usr_function_tree m
            left join usr_role_function rm on m.function_code = rm.function_code
        where rm.role_code = #{roleCode}
              and m.function_code not in (select m.parent_code from usr_function_tree m inner join usr_role_function rm on m.function_code = rm.function_code and rm.role_code = #{roleCode})
		order by m.parent_code, m.view_index
	</select>
	
	<select id="selectFunctionTreePerms" resultType="String">
		select distinct m.perms
		from usr_function_tree m
			 left join usr_role_function rm on m.function_code = rm.function_code
			 left join usr_user_role ur on rm.role_code = ur.role_code
	</select>

	<select id="selectFunctionPermsByLoginName" parameterType="String" resultType="String">
		select distinct m.perms
		from usr_function_tree m
			 left join usr_role_function rm on m.function_code = rm.function_code
			 left join usr_user_role ur on rm.role_code = ur.role_code
			 left join usr_role r on r.role_code = ur.role_code
		where ur.login_name = #{loginName}
	</select>
	
	<select id="selectFunctionPermsByRoleCode" parameterType="Long" resultType="String">
		select distinct m.perms
		from usr_function_tree m
			 left join usr_role_function rm on m.function_code = rm.function_code
		where rm.role_code = #{roleCode}
	</select>
	
	<select id="selectFunctionById" parameterType="Long" resultMap="UsrFunctionResult">
		<include refid="selectFunctionVo"/>
		where function_code = #{functionCode}
	</select>
	
	<select id="hasChildByFunctionCode" resultType="Integer">
	    select count(1) from usr_function_tree where parent_code = #{functionCode}
	</select>
	
	<select id="checkFunctionNameUnique" parameterType="UsrFunctionTree" resultMap="UsrFunctionResult">
		<include refid="selectFunctionVo"/>
		where function_name=#{functionName} and parent_code = #{parentCode} limit 1
	</select>
	
	<update id="updateFunction" parameterType="UsrFunctionTree">
		update usr_function_tree
		<set>
			<if test="functionName != null and functionName != ''">function_name = #{functionName},</if>
			<if test="parentCode != null">parent_code = #{parentCode},</if>
			<if test="viewIndex != null">view_index = #{viewIndex},</if>
			<if test="isLeaf != null">is_leaf = #{isLeaf},</if>
			<if test="functionPath != null and functionPath != ''">function_path = #{functionPath},</if>
			<if test="remark != null and remark != ''">remark = #{remark},</if>
			<if test="isPanel != null and path != ''">is_panel = #{isPanel},</if>
			<if test="iconResource !=null and iconResource != ''">icon_resource_resource = #{iconResource},</if>
			<if test="functionType != null and functionType != ''">function_type = #{functionType},</if>
			<if test="viewFlag != null">view_flag = #{viewFlag},</if>
			<if test="functionClass != null and functionClass != ''">function_class = #{functionClass},</if>
			<if test="fullPath != null">full_path = #{fullPath},</if>
			<if test="functionKind != null">function_kind = #{functionKind},</if>
			<if test="quickType != null">quick_type = #{quickType},</if>
			<if test="query != null">`query` = #{query},</if>
			<if test="isFrame != null and isFrame != ''">is_frame = #{isFrame},</if>
			<if test="isCache != null and isCache != ''">is_cache = #{isCache},</if>
		    <if test="path != null and path != ''">path = #{path},</if>
			<if test="component != null">component = #{component},</if>
			<if test="perms !=null">perms = #{perms},</if>
		</set>
		where function_code = #{functionCode}
	</update>

	<insert id="insertFunction" parameterType="UsrFunctionTree">
		insert into usr_function_tree(
		<if test="functionCode != null and functionCode != 0">function_code,</if>
		<if test="functionName != null and functionName != ''">function_name,</if>
		<if test="parentCode != null">parent_code,</if>
		<if test="viewIndex != null">view_index,</if>
		<if test="isLeaf != null">is_leaf,</if>
		<if test="functionPath != null and functionPath != ''">function_path,</if>
		<if test="remark != null and remark != ''">remark,</if>
		<if test="isPanel != null and path != ''">is_panel,</if>
		<if test="iconResource !=null and iconResource != ''">icon_resource_resourc,</if>
		<if test="functionType != null and functionType != ''">function_type,</if>
		<if test="viewFlag != null">view_flag,</if>
		<if test="functionClass != null and functionClass != ''">function_class,</if>
		<if test="fullPath != null">full_path,</if>
		<if test="functionKind != null">function_kind,</if>
		<if test="quickType != null">quick_type,</if>
		<if test="query != null">`query`,</if>
		<if test="isFrame != null and isFrame != ''">is_frame,</if>
		<if test="isCache != null and isCache != ''">is_cache,</if>
		<if test="path != null and path != ''">path,</if>
		<if test="component != null">component,</if>
		<if test="perms !=null">perms,</if>
		)values(
		<if test="functionCode != null and functionCode != 0">#{functionCode},</if>
		<if test="functionName != null and functionName != ''">#{functionName},</if>
		<if test="parentCode != null">#{parentCode},</if>
		<if test="viewIndex != null">#{viewIndex},</if>
		<if test="isLeaf != null">#{isLeaf},</if>
		<if test="functionPath != null and functionPath != ''">#{functionPath},</if>
		<if test="remark != null and remark != ''">#{remark},</if>
		<if test="isPanel != null and path != ''">#{isPanel},</if>
		<if test="iconResource !=null and iconResource != ''">#{iconResource},</if>
		<if test="functionType != null and functionType != ''">#{functionType},</if>
		<if test="viewFlag != null">#{viewFlag},</if>
		<if test="functionClass != null and functionClass != ''">#{functionClass},</if>
		<if test="fullPath != null">#{fullPath},</if>
		<if test="functionKind != null">#{functionKind},</if>
		<if test="quickType != null">#{quickType},</if>
		<if test="query != null">#{query},</if>
		<if test="isFrame != null and isFrame != ''">#{isFrame},</if>
		<if test="isCache != null and isCache != ''">#{isCache},</if>
		<if test="path != null and path != ''">#{path},</if>
		<if test="component != null">#{component},</if>
		<if test="perms !=null">#{perms},</if>
		)
	</insert>
	
	<delete id="deleteFunctionById" parameterType="Long">
	    delete from usr_function_tree where function_code = #{functionCode}
	</delete>

</mapper> 